apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.kotlin.android.extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.skyscanner.mini_skyscanner"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
    }
    androidExtensions {
        experimental true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    kapt 'com.android.databinding:compiler:2.3.1'

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation 'org.mockito:mockito-inline:2.8.47'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation "android.arch.core:core-testing:2.1.0"
    testImplementation "org.mockito:mockito-core:2.13.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    def powermock_version = "2.0.0-beta.5"
    testImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
    testImplementation "org.powermock:powermock-module-junit4:$powermock_version"

    // Security
    implementation 'androidx.security:security-crypto:1.1.0-alpha02'

    // dagger
    def dagger_version = "2.22"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // ViewModel and LiveData
    def lifecycle_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Retrofit
    def retrofit_version = "2.5.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // RxJava
    def rxjava_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    // RxKotlin
    def rxkotlin_version = '2.4.0'
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"

    // Rx-Retrofit Call Adapter
    def rxcalladapter_version = '2.5.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxcalladapter_version"

    // okhttp
    def okhttp_version = '4.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    testImplementation("com.squareup.okhttp3:mockwebserver:$okhttp_version")

    // gson
    def gson_version="2.8.5"
    implementation "com.google.code.gson:gson:$gson_version"

}